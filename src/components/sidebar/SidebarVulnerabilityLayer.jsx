import React from 'react';
import PropTypes from 'prop-types';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import {
  faLevelUp,
  faToggleOff,
  faToggleOn,
} from '@fortawesome/pro-regular-svg-icons';
import SidebarVulnerabilitySlider from './SidebarVulnerabilitySlider';

class SidebarVulnerabilityLayer extends React.PureComponent {
  getTitleSwitch() {
    const {
      hidden,
      toggleLayerVisibility,
      id,
    } = this.props;

    const icon = hidden
      ? faToggleOff
      : faToggleOn;
    return (
      <FontAwesomeIcon
        icon={icon}
        onClick={() => toggleLayerVisibility(id)}
      />
    );
  }

  getTitleRow() {
    const {
      name,
    } = this.props;

    return (
      <div className="sidebar__choropleth-layer-name sidebar__layers-title-row">
        <div className="sidebar__layers-title-left">
          <FontAwesomeIcon
            icon={faLevelUp}
            rotation={90}
          />
          <div className="sidebar__layers-title">
            <div className="sidebar__layers-title">
              {name}
            </div>
          </div>
        </div>
        <div className="sidebar__layers-title-right">
          {this.getTitleSwitch()}
        </div>
      </div>
    );
  }

  getSliderRow() {
    const {
      setChoroplethValue,
      id,
      maxValue,
      minValue,
      value,
      colorRamp,
    } = this.props;

    const sliderProps = {
      setChoroplethValue,
      id,
      maxValue,
      minValue,
      value,
      colorRamp,
    };

    return (
      <SidebarVulnerabilitySlider
        {...sliderProps}
      />
    );
  }

  render() {
    return (
      <div
        className="sidebar__choropleth-layer-row sidebar__layers-block"
      >
        {this.getTitleRow()}
        {this.getSliderRow()}
      </div>
    );
  }
}

SidebarVulnerabilityLayer.defaultProps = {
  colorRamp: null,
};

SidebarVulnerabilityLayer.propTypes = {
  /** if layer is on/off */
  hidden: PropTypes.bool.isRequired,
  /** Sets choropleth filter values */
  setChoroplethValue: PropTypes.func.isRequired,
  /** choropleth data item id */
  id: PropTypes.string.isRequired,
  /** layer name */
  name: PropTypes.string.isRequired,
  maxValue: PropTypes.number.isRequired,
  minValue: PropTypes.number.isRequired,
  value: PropTypes.number.isRequired,
  /** d3 quantize color scale */
  // colorRamp: PropTypes.func,
  colorRamp: PropTypes.arrayOf(PropTypes.string),
};

export default SidebarVulnerabilityLayer;
